import sys, pygame
from logics import *

def draw_interface(score, delta = 0):
    pygame.draw.rect(screen, (255, 255, 255), title)
    font = pygame.font.SysFont("stxingkai", 70)
    font_score = pygame.font.SysFont("simsun", 48)
    font_delta = pygame.font.SysFont("simsun", 32)
    text_score = font_score.render("Score", 1, (0, 0, 0))
    text_score_value = font_score.render(str(score), 1, (0, 0, 0))
    if delta > 0:
        text_delta = font_delta.render(('+' + str(delta)), 1, (0, 0, 0))
        screen.blit(text_delta, (255, 78))
    screen.blit(text_score, (20, 35))
    screen.blit(text_score_value, (250, 35))
    for r in range(blocks):
        for c in range(blocks):
            value = mas[r][c]
            text = font.render(str(value), 1, (0, 0, 0))
            w = c * block_size + space * (c + 1)
            h = r * block_size + space * (r + 1) + title_size
            pygame.draw.rect(screen, colors[value], (w, h, block_size, block_size))
            if value != 0:
                font_w, font_h = text.get_size()
                text_x = w + (block_size - font_w) / 2
                text_y = h + (block_size - font_h) / 2
                screen.blit(text, (text_x, text_y))

mas = [ [0, 0, 0, 0] for _ in range(4) ]

colors = \
{
    0: (100, 100, 100),
    2: (255, 255, 255),
    4: (255, 220, 150),
    8: (255, 190, 0),
    16: (255, 170, 0),
    32: (255, 150, 0),
    64: (255, 130, 0),
    128: (255, 110, 0),
    256: (255, 90, 0),
    512: (255, 70, 0),
    1024: (255, 40, 0),
    2048: (255, 10, 0),
}
blocks = 4
block_size = 110
space = 10
title_size = 110
width = blocks*block_size + space * (blocks+1)
heigth = width + title_size
score = 0

title = pygame.Rect(0, 0, width, title_size)
pygame.init()
screen = pygame.display.set_mode((width, heigth))
pygame.display.set_caption("2048")


draw_interface(score)
pygame.display.update()
while is_0_in_mas(mas) or can_move(mas):
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit(0)
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                mas, delta = move_left(mas)
            elif event.key == pygame.K_RIGHT:
                mas, delta = move_right(mas)
            elif event.key == pygame.K_UP:
                mas, delta = move_up(mas)
            elif event.key == pygame.K_DOWN:
                mas, delta = move_down(mas)

            score += delta
            empty = get_empty_list(mas)
            random.shuffle(empty)
            random_num = empty.pop()
            x, y = get_index_for_namber(random_num)
            insert_2_or_4(mas, x, y)
            #print("Мы заполнили элемент под номером", random_num)
            #pretty_print(mas)
            draw_interface(score, delta)
            pygame.display.update()

